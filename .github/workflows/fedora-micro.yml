name: fedora-micro

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '20 03 * * *'  # 3:20am everyday

# I don't think anyone will use these with s390x or ppc64le
env:
  PLATFORMS: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
  
jobs:
  build_and_push_docker_images:
    strategy:
      fail-fast: false
      matrix:
        version: [ 37, 38, 39 ]
        images: [ micro, node, npm, python3, python3-dev ]
        exclude:
          - images: node
            version: 38
          - images: node          
            version: 39
          - images: npm
            version: 38
          - images: npm
            version: 39
        include:
          - version: 37
            tag: latest
          - version: 39
            tag: rawhide
          - images: node
            node-version: 18
          - images: npm
            node-version: 18


    runs-on: ubuntu-latest
    container:
      image: quay.io/buildah/stable:v1.28

    name: Docker Images
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - id: build-test
        uses: redhat-actions/buildah-build@v2
        with:
          image: fedora-micro
          tags: test
          containerfiles: |
            ./${{ matrix.images }}/Containerfile
          build-args: |
            VERSION_ID=${{ matrix.version }}
            NODE_VERSION=${{ matrix.node-version }}


      - name: Install qemu and dnf
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static podman

      - name: Check for changes
        run: |
          chmod +x ./check_for_rpm_changes.sh
          buildah unshare ./check_for_rpm_changes.sh quay.io/np22-jpg/fedora-${{ matrix.images }}:${{ matrix.version }} fedora-micro:test


      - id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: fedora-${{ matrix.images }}
          tags: ${{ matrix.version }} ${{ matrix.tag }}
          containerfiles: |
            ./${{ matrix.images }}/Containerfile
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            VERSION_ID=${{ matrix.version }}
            NODE_VERSION=${{ matrix.node-version }}

      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/np22-jpg
          username: np22-jpg+fedoramicro
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push To Docker Hub
        id: push-to-docker
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io/np22jpg
          username: np22jpg
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Print image url
        run:  |
          echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
          echo "Image pushed to ${{ steps.push-to-docker.outputs.registry-paths }}"
      
      # - name: Write signing key to disk
      #   run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key

      # - name: Install Cosign
      #   uses: sigstore/cosign-installer@main

      # - name: Sign Images with Cosign
      #   run: |
      #     cosign sign -y --key cosign.key \
      #       quay.io/np22-jpg/fedora-${{ matrix.images }}:${{ matrix.version }}
      #       quay.io/np22-jpg/fedora-${{ matrix.images }}:${{ matrix.tag }}
      #       docker.io/np22jpg/fedora-${{ matrix.images }}:${{ matrix.version }}
      #       docker.io/np22jpg/fedora-${{ matrix.images }}:${{ matrix.tag }}
      #   env: COSIGN_PRIVATE_KEY=COSIGN_PASSWORD